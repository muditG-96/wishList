
package com.example.wishlist.customer.v3_1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CustomerServicesApiService", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", wsdlLocation = "file:/Users/maddy96/Documents/SleepCountry/wishList/src/main/resources/orce.wsdl")
public class CustomerServicesApiService
    extends Service
{

    private final static URL CUSTOMERSERVICESAPISERVICE_WSDL_LOCATION;
    private final static WebServiceException CUSTOMERSERVICESAPISERVICE_EXCEPTION;
    private final static QName CUSTOMERSERVICESAPISERVICE_QNAME = new QName("http://v3_1.customer.webservices.csx.dtv.com/", "CustomerServicesApiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/maddy96/Documents/SleepCountry/wishList/src/main/resources/orce.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CUSTOMERSERVICESAPISERVICE_WSDL_LOCATION = url;
        CUSTOMERSERVICESAPISERVICE_EXCEPTION = e;
    }

    public CustomerServicesApiService() {
        super(__getWsdlLocation(), CUSTOMERSERVICESAPISERVICE_QNAME);
    }

    public CustomerServicesApiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CUSTOMERSERVICESAPISERVICE_QNAME, features);
    }

    public CustomerServicesApiService(URL wsdlLocation) {
        super(wsdlLocation, CUSTOMERSERVICESAPISERVICE_QNAME);
    }

    public CustomerServicesApiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CUSTOMERSERVICESAPISERVICE_QNAME, features);
    }

    public CustomerServicesApiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CustomerServicesApiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CustomerServicesApi
     */
    @WebEndpoint(name = "CustomerServicesApiPort")
    public CustomerServicesApi getCustomerServicesApiPort() {
        return super.getPort(new QName("http://v3_1.customer.webservices.csx.dtv.com/", "CustomerServicesApiPort"), CustomerServicesApi.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CustomerServicesApi
     */
    @WebEndpoint(name = "CustomerServicesApiPort")
    public CustomerServicesApi getCustomerServicesApiPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://v3_1.customer.webservices.csx.dtv.com/", "CustomerServicesApiPort"), CustomerServicesApi.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CUSTOMERSERVICESAPISERVICE_EXCEPTION!= null) {
            throw CUSTOMERSERVICESAPISERVICE_EXCEPTION;
        }
        return CUSTOMERSERVICESAPISERVICE_WSDL_LOCATION;
    }

}
