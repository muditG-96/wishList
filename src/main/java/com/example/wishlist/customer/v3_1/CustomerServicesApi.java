
package com.example.wishlist.customer.v3_1;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerServicesApi", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CustomerServicesApi {


    /**
     * 
     * @param updateUserId
     * @param securityUserId
     * @param customerFranchisees
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "addOrDeleteCustomerFranchisees", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrDeleteCustomerFranchisees")
    @ResponseWrapper(localName = "addOrDeleteCustomerFranchiseesResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrDeleteCustomerFranchiseesResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrDeleteCustomerFranchiseesRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrDeleteCustomerFranchiseesResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrDeleteCustomerFranchisees/Fault/RelateProcessingException")
    })
    public String addOrDeleteCustomerFranchisees(
        @WebParam(name = "customerFranchisees", targetNamespace = "")
        CustomerFranchiseeRequestType customerFranchisees,
        @WebParam(name = "updateUserId", targetNamespace = "")
        String updateUserId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param customerNoteData
     * @param updateUserId
     * @param securityUserId
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "addOrUpdateCustomerNote", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrUpdateCustomerNote")
    @ResponseWrapper(localName = "addOrUpdateCustomerNoteResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrUpdateCustomerNoteResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdateCustomerNoteRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdateCustomerNoteResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdateCustomerNote/Fault/RelateProcessingException")
    })
    public String addOrUpdateCustomerNote(
        @WebParam(name = "customerNoteData", targetNamespace = "")
        CustomerNotesRequestType customerNoteData,
        @WebParam(name = "updateUserId", targetNamespace = "")
        String updateUserId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param endDate
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @param startDate
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.PromotionEventReturnType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPromotionHistoryWithDateRange", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPromotionHistoryWithDateRange")
    @ResponseWrapper(localName = "getPromotionHistoryWithDateRangeResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPromotionHistoryWithDateRangeResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPromotionHistoryWithDateRangeRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPromotionHistoryWithDateRangeResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPromotionHistoryWithDateRange/Fault/RelateProcessingException")
    })
    public PromotionEventReturnType getPromotionHistoryWithDateRange(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param currencyCode
     * @param cardNumber
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.CustomerResponseType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveCustomer", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.RetrieveCustomer")
    @ResponseWrapper(localName = "retrieveCustomerResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.RetrieveCustomerResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/retrieveCustomerRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/retrieveCustomerResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/retrieveCustomer/Fault/RelateProcessingException")
    })
    public CustomerResponseType retrieveCustomer(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "currencyCode", targetNamespace = "")
        String currencyCode,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param customerData
     * @param securityUserId
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "addOrUpdateCustomer", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrUpdateCustomer")
    @ResponseWrapper(localName = "addOrUpdateCustomerResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrUpdateCustomerResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdateCustomerRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdateCustomerResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdateCustomer/Fault/RelateProcessingException")
    })
    public String addOrUpdateCustomer(
        @WebParam(name = "customerData", targetNamespace = "")
        CustomerType customerData,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param mergeSource
     * @param updateUserId
     * @param mergeTargetSet
     * @param securityUserId
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "mergeCustomers", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.MergeCustomers")
    @ResponseWrapper(localName = "mergeCustomersResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.MergeCustomersResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/mergeCustomersRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/mergeCustomersResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/mergeCustomers/Fault/RelateProcessingException")
    })
    public String mergeCustomers(
        @WebParam(name = "mergeSource", targetNamespace = "")
        CustIdentifier mergeSource,
        @WebParam(name = "mergeTargetSet", targetNamespace = "")
        List<CustIdentifier> mergeTargetSet,
        @WebParam(name = "updateUserId", targetNamespace = "")
        String updateUserId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param updateUserId
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @param transactionInfo
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "associateCardToCustomer", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AssociateCardToCustomer")
    @ResponseWrapper(localName = "associateCardToCustomerResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AssociateCardToCustomerResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/associateCardToCustomerRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/associateCardToCustomerResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/associateCardToCustomer/Fault/RelateProcessingException")
    })
    public void associateCardToCustomer(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "TransactionInfo", targetNamespace = "")
        RTPTransactionType transactionInfo,
        @WebParam(name = "updateUserId", targetNamespace = "")
        String updateUserId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.AssociateAssignmentResponseType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAssociateAssignment", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetAssociateAssignment")
    @ResponseWrapper(localName = "getAssociateAssignmentResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetAssociateAssignmentResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getAssociateAssignmentRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getAssociateAssignmentResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getAssociateAssignment/Fault/RelateProcessingException")
    })
    public AssociateAssignmentResponseType getAssociateAssignment(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param securityUserId
     * @param associateAssignmentData
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "updateAssociateAssignment", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.UpdateAssociateAssignment")
    @ResponseWrapper(localName = "updateAssociateAssignmentResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.UpdateAssociateAssignmentResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/updateAssociateAssignmentRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/updateAssociateAssignmentResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/updateAssociateAssignment/Fault/RelateProcessingException")
    })
    public String updateAssociateAssignment(
        @WebParam(name = "associateAssignmentData", targetNamespace = "")
        AssociateAssignmentRequestType associateAssignmentData,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param businessDate
     * @param locationId
     * @param retailTransactionId
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.ItemHistoryResponseType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemHistory", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetItemHistory")
    @ResponseWrapper(localName = "getItemHistoryResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetItemHistoryResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getItemHistoryRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getItemHistoryResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getItemHistory/Fault/RelateProcessingException")
    })
    public ItemHistoryResponseType getItemHistory(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "businessDate", targetNamespace = "")
        XMLGregorianCalendar businessDate,
        @WebParam(name = "retailTransactionId", targetNamespace = "")
        String retailTransactionId,
        @WebParam(name = "locationId", targetNamespace = "")
        String locationId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param typeFilter
     * @param endDate
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @param startDate
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.VisualizerItemResponseType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVisualizerItems", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetVisualizerItems")
    @ResponseWrapper(localName = "getVisualizerItemsResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetVisualizerItemsResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getVisualizerItemsRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getVisualizerItemsResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getVisualizerItems/Fault/RelateProcessingException")
    })
    public VisualizerItemResponseType getVisualizerItems(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "typeFilter", targetNamespace = "")
        String typeFilter,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param wishlistData
     * @param securityUserId
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "addWishlistItems", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddWishlistItems")
    @ResponseWrapper(localName = "addWishlistItemsResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddWishlistItemsResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addWishlistItemsRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addWishlistItemsResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addWishlistItems/Fault/RelateProcessingException")
    })
    public String addWishlistItems(
        @WebParam(name = "wishlistData", targetNamespace = "")
        WishlistItemRequestType wishlistData,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param maxRecords
     * @param endDate
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @param startDate
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.PromotionEventReturnType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPromotionHistoryWithDateRangeMaxResult", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPromotionHistoryWithDateRangeMaxResult")
    @ResponseWrapper(localName = "getPromotionHistoryWithDateRangeMaxResultResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPromotionHistoryWithDateRangeMaxResultResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPromotionHistoryWithDateRangeMaxResultRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPromotionHistoryWithDateRangeMaxResultResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPromotionHistoryWithDateRangeMaxResult/Fault/RelateProcessingException")
    })
    public PromotionEventReturnType getPromotionHistoryWithDateRangeMaxResult(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "maxRecords", targetNamespace = "")
        int maxRecords,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param lineItemTypeCode
     * @param endDate
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @param startDate
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.TransactionReturnType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTransactionHistory", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetTransactionHistory")
    @ResponseWrapper(localName = "getTransactionHistoryResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetTransactionHistoryResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getTransactionHistoryRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getTransactionHistoryResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getTransactionHistory/Fault/RelateProcessingException")
    })
    public TransactionReturnType getTransactionHistory(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId,
        @WebParam(name = "LineItemTypeCode", targetNamespace = "")
        String lineItemTypeCode)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param associateId
     * @param customerData
     * @param securityUserId
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.CustomersResponseType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchCustomers", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.SearchCustomers")
    @ResponseWrapper(localName = "searchCustomersResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.SearchCustomersResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/searchCustomersRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/searchCustomersResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/searchCustomers/Fault/RelateProcessingException")
    })
    public CustomersResponseType searchCustomers(
        @WebParam(name = "customerData", targetNamespace = "")
        CustomerLookupType customerData,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId,
        @WebParam(name = "AssociateId", targetNamespace = "")
        String associateId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param wishlistData
     * @param securityUserId
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "deleteWishlistItems", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.DeleteWishlistItems")
    @ResponseWrapper(localName = "deleteWishlistItemsResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.DeleteWishlistItemsResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/deleteWishlistItemsRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/deleteWishlistItemsResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/deleteWishlistItems/Fault/RelateProcessingException")
    })
    public String deleteWishlistItems(
        @WebParam(name = "wishlistData", targetNamespace = "")
        WishlistItemRequestType wishlistData,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param preferenceTypeId
     * @param securityUserId
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.PreferenceTypeReturnType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPreferenceTypes", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPreferenceTypes")
    @ResponseWrapper(localName = "getPreferenceTypesResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPreferenceTypesResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPreferenceTypesRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPreferenceTypesResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPreferenceTypes/Fault/RelateProcessingException")
    })
    public PreferenceTypeReturnType getPreferenceTypes(
        @WebParam(name = "preferenceTypeId", targetNamespace = "")
        long preferenceTypeId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param updateUserId
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteCustomer", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.DeleteCustomer")
    @ResponseWrapper(localName = "deleteCustomerResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.DeleteCustomerResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/deleteCustomerRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/deleteCustomerResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/deleteCustomer/Fault/RelateProcessingException")
    })
    public void deleteCustomer(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "updateUserId", targetNamespace = "")
        String updateUserId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param customerId
     * @param securityUserId
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.CustomerImageType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomerImage", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetCustomerImage")
    @ResponseWrapper(localName = "getCustomerImageResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetCustomerImageResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getCustomerImageRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getCustomerImageResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getCustomerImage/Fault/RelateProcessingException")
    })
    public CustomerImageType getCustomerImage(
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId,
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param typeFilter
     * @param endDate
     * @param customerId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @param startDate
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.CustomerNotesContainerReturnType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomerNotes", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetCustomerNotes")
    @ResponseWrapper(localName = "getCustomerNotesResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetCustomerNotesResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getCustomerNotesRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getCustomerNotesResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getCustomerNotes/Fault/RelateProcessingException")
    })
    public CustomerNotesContainerReturnType getCustomerNotes(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "typeFilter", targetNamespace = "")
        String typeFilter,
        @WebParam(name = "startDate", targetNamespace = "")
        XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "")
        XMLGregorianCalendar endDate,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param updateUserId
     * @param securityUserId
     * @param customerPreferenceCenter
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(name = "customerId", targetNamespace = "")
    @RequestWrapper(localName = "addOrUpdatePreferenceCenter", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrUpdatePreferenceCenter")
    @ResponseWrapper(localName = "addOrUpdatePreferenceCenterResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.AddOrUpdatePreferenceCenterResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdatePreferenceCenterRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdatePreferenceCenterResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/addOrUpdatePreferenceCenter/Fault/RelateProcessingException")
    })
    public String addOrUpdatePreferenceCenter(
        @WebParam(name = "customerPreferenceCenter", targetNamespace = "")
        PreferenceCenterRequestType customerPreferenceCenter,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId,
        @WebParam(name = "updateUserId", targetNamespace = "")
        String updateUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param updateUserId
     * @param visualizerItems
     * @param securityUserId
     * @return
     *     returns java.lang.String
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "changeItemDisplayStatus", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.ChangeItemDisplayStatus")
    @ResponseWrapper(localName = "changeItemDisplayStatusResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.ChangeItemDisplayStatusResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/changeItemDisplayStatusRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/changeItemDisplayStatusResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/changeItemDisplayStatus/Fault/RelateProcessingException")
    })
    public String changeItemDisplayStatus(
        @WebParam(name = "visualizerItems", targetNamespace = "")
        ItemVisualizerRequestType visualizerItems,
        @WebParam(name = "updateUserId", targetNamespace = "")
        String updateUserId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

    /**
     * 
     * @param customerId
     * @param preferenceTypeId
     * @param securityUserId
     * @param alternateKeyList
     * @param cardNumber
     * @return
     *     returns com.dtv.csx.webservices.customer.v3_1.PreferenceCenterReturnType
     * @throws RelateProcessingException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPreferenceCenter", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPreferenceCenter")
    @ResponseWrapper(localName = "getPreferenceCenterResponse", targetNamespace = "http://v3_1.customer.webservices.csx.dtv.com/", className = "com.dtv.csx.webservices.customer.v3_1.GetPreferenceCenterResponse")
    @Action(input = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPreferenceCenterRequest", output = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPreferenceCenterResponse", fault = {
        @FaultAction(className = RelateProcessingException_Exception.class, value = "http://v3_1.customer.webservices.csx.dtv.com/CustomerServicesApi/getPreferenceCenter/Fault/RelateProcessingException")
    })
    public PreferenceCenterReturnType getPreferenceCenter(
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "alternateKeyList", targetNamespace = "")
        List<AlternateKeyLookupType> alternateKeyList,
        @WebParam(name = "cardNumber", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "preferenceTypeId", targetNamespace = "")
        long preferenceTypeId,
        @WebParam(name = "securityUserId", targetNamespace = "")
        String securityUserId)
        throws RelateProcessingException_Exception
    ;

}
